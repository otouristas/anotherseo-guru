import { useState } from "react";
import { Hero } from "@/components/Hero";
import { ContentInput } from "@/components/ContentInput";
import { PlatformSelector } from "@/components/PlatformSelector";
import { ToneStyleSelector } from "@/components/ToneStyleSelector";
import { PreviewPane } from "@/components/PreviewPane";
import { PricingSection } from "@/components/PricingSection";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Sparkles } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

interface GeneratedContent {
  platform: string;
  content: string;
}

const Index = () => {
  const [content, setContent] = useState("");
  const [selectedPlatforms, setSelectedPlatforms] = useState<string[]>([]);
  const [tone, setTone] = useState("professional");
  const [style, setStyle] = useState("narrative");
  const [generatedContent, setGeneratedContent] = useState<GeneratedContent[]>([]);
  const [isGenerating, setIsGenerating] = useState(false);
  const { toast } = useToast();

  const handlePlatformSelect = (platformId: string) => {
    setSelectedPlatforms((prev) =>
      prev.includes(platformId)
        ? prev.filter((id) => id !== platformId)
        : [...prev, platformId]
    );
  };

  const handleGenerate = async () => {
    if (content.length < 100) {
      toast({
        title: "Content too short",
        description: "Please enter at least 100 characters",
        variant: "destructive",
      });
      return;
    }

    if (selectedPlatforms.length === 0) {
      toast({
        title: "No platforms selected",
        description: "Please select at least one platform",
        variant: "destructive",
      });
      return;
    }

    setIsGenerating(true);

    // Simulate AI generation - In production, this would call Lovable AI
    setTimeout(() => {
      const mockContent = selectedPlatforms.map((platform) => ({
        platform,
        content: `[${tone.toUpperCase()} ${style.toUpperCase()} VERSION for ${platform.toUpperCase()}]\n\n${content.substring(0, 200)}...\n\nThis content has been optimized for ${platform} with a ${tone} tone and ${style} style. In production, this would be generated by AI with full platform-specific optimization including SEO keywords, proper formatting, and engagement hooks.`,
      }));

      setGeneratedContent(mockContent);
      setIsGenerating(false);

      toast({
        title: "Content Generated! ✨",
        description: `Successfully created ${selectedPlatforms.length} platform version${selectedPlatforms.length > 1 ? "s" : ""}`,
      });
    }, 2000);
  };

  return (
    <div className="min-h-screen">
      <Hero />

      {/* Main App Interface */}
      <section id="app-interface" className="py-20 px-4 bg-gradient-to-b from-muted/20 to-background">
        <div className="container mx-auto max-w-7xl">
          <Card className="p-8 md:p-12 shadow-strong">
            <div className="grid lg:grid-cols-2 gap-8">
              {/* Left Column - Input & Controls */}
              <div className="space-y-8">
                <div>
                  <h2 className="text-3xl font-bold mb-2">Create Your Content</h2>
                  <p className="text-muted-foreground">
                    Paste your original content and customize the output
                  </p>
                </div>

                <ContentInput value={content} onChange={setContent} />

                <PlatformSelector
                  selected={selectedPlatforms}
                  onSelect={handlePlatformSelect}
                />

                <ToneStyleSelector
                  tone={tone}
                  style={style}
                  onToneChange={setTone}
                  onStyleChange={setStyle}
                />

                <Button
                  size="lg"
                  variant="hero"
                  className="w-full"
                  onClick={handleGenerate}
                  disabled={content.length < 100 || selectedPlatforms.length === 0}
                >
                  <Sparkles className="w-5 h-5" />
                  Generate Optimized Content
                </Button>
              </div>

              {/* Right Column - Preview */}
              <div className="lg:sticky lg:top-8 h-fit">
                <h3 className="text-2xl font-bold mb-4">Live Preview</h3>
                <PreviewPane
                  generatedContent={generatedContent}
                  isGenerating={isGenerating}
                />
              </div>
            </div>
          </Card>
        </div>
      </section>

      {/* Pricing Section */}
      <PricingSection />

      {/* Footer */}
      <footer className="py-12 px-4 border-t">
        <div className="container mx-auto text-center text-muted-foreground">
          <p>© 2025 Content Repurposer. Transform once, publish everywhere.</p>
        </div>
      </footer>
    </div>
  );
};

export default Index;
